version: 0.2
phases:
  install:
    runtime-versions:
        docker: 20
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
    - echo Logging in to Amazon ECR....
    - aws --version
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/uktrade
    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - IMAGE_TAG=${COMMIT_HASH:=latest}
    - REPOSITORY_URI=public.ecr.aws/uktrade/ci-image-builder
    - if [ -z $CODEBUILD_WEBHOOK_TRIGGER ]; then GIT_BRANCH=$(git branch --show-current); else GIT_BRANCH=$(echo $CODEBUILD_WEBHOOK_TRIGGER | awk -F "/" '{print $2}'); fi
  build:
    commands:
    - codebuild-breakpoint
    - echo Build started on `date`
    - echo Building the Docker image...
    - docker build -t $REPOSITORY_URI .
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$GIT_BRANCH
  post_build:
    commands:
    - echo Build completed on `date`
    - echo pushing to repo
    - docker push -a $REPOSITORY_URI
    - echo Writing image definitions file...
    - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
