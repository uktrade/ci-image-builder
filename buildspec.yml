version: 0.2

env:
  variables:
    PACK_VERSION: v0.28.0

phases:
  install:
    runtime-versions:
        docker: 20
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
    - echo Logging in to Amazon ECR....
    - aws --version
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/uktrade
    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - COMMIT_TAG="commit-$COMMIT_HASH"
    - PACK_VERSION_TAG="pack-$PACK_VERSION"
    - REPOSITORY_URI=public.ecr.aws/uktrade/ci-image-builder
    - >
      if [ -z $CODEBUILD_WEBHOOK_TRIGGER ]; then
        BRANCH_TAG="branch-$(git branch --show-current)";
      elif [[ $CODEBUILD_WEBHOOK_TRIGGER == branch/*]]; then
        BRANCH_TAG="branch_$(echo $CODEBUILD_WEBHOOK_TRIGGER | awk -F "/" '{print $2}')";
      fi
    - >
      if [[ $CODEBUILD_WEBHOOK_TRIGGER == tag/*]]; then
        TAG_TAG=$(echo $CODEBUILD_WEBHOOK_TRIGGER | awk -F "/" '{print $2}');
      fi
    - > 
      echo "COMMIT_TAG: $COMMIT_TAG"
      echo "BRANCH_TAG: $BRANCH_TAG"
      echo "TAG_TAG: $TAG_TAG"
      echo "PACK_VERSION_TAG: $PACK_VERSION_TAG"
  build:
    commands:
    - echo Build started on `date`
    - echo Building the Docker image...
    - docker build --build-arg PACK_VERSION=${PACK_VERSION} -t $REPOSITORY_URI .
    - docker tag $REPOSITORY_URI:latest "$REPOSITORY_URI:$COMMIT_TAG"
    - >
      if [ -z $BRANCH_TAG ]; then
        docker tag $REPOSITORY_URI:latest "$REPOSITORY_URI:$BRANCH_TAG";
      fi
    - >
      if [ -z $TAG_TAG ]; then
        docker tag $REPOSITORY_URI:latest "$REPOSITORY_URI:$TAG_TAG";
      fi
    - docker tag $REPOSITORY_URI:latest "$REPOSITORY_URI:$PACK_VERSION_TAG"

  post_build:
    commands:
    - echo Build completed on `date`
    - echo pushing to repo
    - docker push -a $REPOSITORY_URI
    - echo Writing image definitions file...
    - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$COMMIT_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
